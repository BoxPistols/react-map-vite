# .github/workflows/ci.yml

name: CI/CD

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

env:
  HUSKY: 0  # CI環境ではhuskyを無効化

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.13.1'
          cache: 'pnpm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@boxpistols'

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            **/node_modules
            ~/.pnpm-store
            !**/node_modules/.cache
            !**/node_modules/.vite
            !**/node_modules/.rollup.cache
            !**/*.log
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
            ${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Lint and Format
        run: pnpm run fix

      - name: Build package
        run: |
          # クリーンアップ
          find . -type d -name ".cache" -exec rm -rf {} +
          find . -type d -name ".vite" -exec rm -rf {} +
          # ビルド実行
          pnpm run build
          pnpm run build:sb

      # パッケージの公開（タグプッシュ時のみ）
      - name: Publish package
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed 's/refs\/tags\/v//')
          npm version $VERSION --no-git-tag-version
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            dist
            storybook-static
          retention-days: 7

  # デプロイジョブ
  deploy:
    needs: check
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
