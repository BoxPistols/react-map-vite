name: CI/CD

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]
  release:
    types: [created]

env:
  HUSKY: 0
  PNPM_HOME: /home/runner/setup-pnpm/node_modules/.bin
  NODE_ENV: production # 本番モードでビルド

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # 履歴を最小限に

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.13.1'
          cache: 'pnpm' # Node.jsモジュールのキャッシュを有効化
          registry-url: 'https://npm.pkg.github.com'
          scope: '@boxpistols'

      # pnpm storeのキャッシュを最適化
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      # 並列実行でビルド時間を短縮
      - name: Build and Lint
        run: |
          pnpm run fix &
          pnpm run build &
          wait

      # Storybookビルドの最適化
      - name: Build Storybook
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          pnpm run build:sb
        env:
          STORYBOOK_DISABLE_TELEMETRY: 1
          NODE_ENV: production

      # 必要なファイルのみをアップロード
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            dist
            storybook-static
          retention-days: 1 # 保持期間を短縮

  publish:
    needs: build
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.13.1'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@boxpistols'

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: .

      - name: Install production dependencies
        run: pnpm install --prod --frozen-lockfile

      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
