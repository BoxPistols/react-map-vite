name: バージョン自動更新（PR作成時）

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main
    paths-ignore:
      - 'package.json' # package.jsonが既に更新されている場合は実行しない

jobs:
  version-bump:
    # update/xxxブランチからのPRの場合のみ実行
    if: startsWith(github.head_ref, 'update/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Node.jsセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20.13.1'

      - name: バージョン取得＆重複チェック
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          # 既存タグ一覧を取得
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            # 既存ならバージョンを+1
            IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
            NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
            echo "バージョン $VERSION は既に存在するため、$NEW_VERSION に更新します。"
            sed -i "s/\"version\": \"$VERSION\"/\"version\": \"$NEW_VERSION\"/" package.json
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add package.json
            git commit -m "mainマージ時にバージョンを$VERSIONから$NEW_VERSIONに自動更新"
            git push
            VERSION=$NEW_VERSION
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: PRにコメント
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🔖 バージョンを \`${{ steps.version-bump.outputs.old_version }}\` から \`${{ steps.version-bump.outputs.new_version }}\` に自動更新しました。`
            })
